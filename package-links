#!/bin/bash -e

# Copyright © Sébastien Luttringer
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

LOCKFILE=~/."${0##*/}".lock
REPOS=/srv/ftp/archlinux/archive/repos
PKGBASE=/srv/ftp/archlinux/archive/packages
PKGFLAT="$PKGBASE/.all" #must be subdirectory of $PKGBASE
PKGEXT='.pkg.tar.xz'
PKGSIG="$PKGEXT.sig"
INDEX="$PKGFLAT/index.0.xz"
TMPINDEX="$PKGFLAT/.index.0.xz"

case $1 in
  -a) SCANDIR="$REPOS";;
  -l|"") SCANDIR="$(ls -1d "$REPOS"/*/*/*|sort|tail -n1)" ;;
  *)
    echo "usage: ${0##*/} -a|-l" >&2
    echo '  -a: scan all archived repositories' >&2
    echo '  -l: scan last archived repostory' >&2
    exit 1
esac

[[ -t 1 ]] && set -x

# we lock!
exec 9> "$LOCKFILE"
flock -n 9 || { echo 'Locking Failed' >&2; exit 1; }


# nice umask
umask 022

# ensure dirs are here
[[ -e "$PKGFLAT" ]] || mkdir -p "$PKGFLAT"

echo "removing dead links in ${PKGBASE##*/}"
find -L "$PKGBASE" -type l -delete -print

# create new links pass
echo 'creating new links'
find $SCANDIR -type f -name "*$PKGEXT" -o -name "*$PKGSIG"| while read src; do
  filename="${src##*/}"
  pkgname="${filename%-*}" #remove arch and extension
  pkgname="${pkgname%-*}" #remove pkgrel
  pkgname="${pkgname%-*}" #remove pkgver
  first="${pkgname:0:1}"
  parent="$PKGBASE/${first,,}/$pkgname"
  # destination in tree
  tdst="$parent/$filename"
  # destination in flat dir
  fdst="$PKGFLAT/$filename"
  # ensure pkgtree parent dir is present
  [[ -d "$parent" ]] || mkdir -v -p "$parent"
  # copy file if necessary
  if [[ "$src" -nt "$tdst" ]]; then
    # remove is necessary to be done and not use -f in ln
    # because this create buggy relative symlink in some case.
    # there is fix around this in next coreutils
    [[ -e "$tdst" ]] && rm -f -v "$tdst"
    # don't use harlink, to be able to easily remove package by date
    # removing a directory by date, will remove symlink in the clean pass
    ln -v -r -s "$src" "$tdst"
  fi
  if [[ "$src" -nt "$fdst" ]]; then
    [[ -e "$fdst" ]] && rm -f -v "$fdst"
    ln -v -r -s "$src" "$fdst"
  fi
done

# disallow listing of PKGFLAT. Too much file
echo 'No listing allowed here.' > "$PKGFLAT/index.html"

# creating a lightweight index (v0) for filenames
# modification time is used to minimize download, so we don't update the file if equal
rm -f "$TMPINDEX"
find "$PKGFLAT" -name "*$PKGEXT" -printf '%f\n'|sed 's/.\{'${#PKGEXT}'\}$//'|sort|xz -9 > "$TMPINDEX"
if [[ ! -e "$INDEX" ]]; then
  mv "$TMPINDEX" "$INDEX"
elif diff -q "$INDEX" "$TMPINDEX"; then
  rm "$TMPINDEX"
else
  rm "$INDEX"
  mv "$TMPINDEX" "$INDEX"
fi

echo "removing empty directories in ${PKGBASE##*/}"
find "$PKGBASE" -type d -empty -delete -print

touch "$PKGBASE" "$PKGFLAT"

# vim:set sw=2 ts=2 ft=sh et:
